name: Aquila Build Configs

######################### Aquila #########################

on:
  workflow_dispatch:
#   release:
#     types: [released]

jobs:
  Build-Default-A:            # Default for Aquila
    name: Build Default Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [GD32,N32]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = GD32 ]; then AVTMP="GD32"; else AVTMP="N32"; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_Default${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila/Default/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${AQUILA_VER}F103RC_voxelab_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${AQUILA_VER}F103RC_voxelab_maple/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-A:            # MM EX for Aquila
    name: Build MM EX Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [GD32,N32]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = GD32 ]; then AVTMP="GD32"; else AVTMP="N32"; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${AQUILA_VER}F103RC_voxelab_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${AQUILA_VER}F103RC_voxelab_maple/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-A:            # UBL EX for Aquila
    name: Build UBL EX Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [GD32,N32]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
        t13: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = GD32 ]; then AVTMP="GD32"; else AVTMP="N32"; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}${TTMP}${MPTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${AQUILA_VER}F103RC_voxelab_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define SHOW_SPEED_IND/${PTEMP}#define SHOW_SPEED_IND/" Marlin/Configuration.h
        if [[ $IS && $TP ]]; then
        sed -i "s/.*#define HAS_CUSTOM_COLORS 1/\/\/#define HAS_CUSTOM_COLORS 1/" Marlin/Configuration.h
        sed -i "s/.*#define MARLIN_SMALL_BUILD/#define MARLIN_SMALL_BUILD/" Marlin/Configuration_adv.h
        fi;
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${AQUILA_VER}F103RC_voxelab_maple/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-IND-A:            # UBL EX IND for Aquila X3/S2
    name: Build UBL EX IND Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [GD32,N32]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
        t13: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = GD32 ]; then AVTMP="GD32"; else AVTMP="N32"; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_IND${TTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila/X3/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila/X3/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila/X3/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${AQUILA_VER}F103RC_voxelab_maple/" platformio.ini
        if ($IS); then STEMP=; ITEMP='\/\/'; else STEMP='\/\/'; ITEMP=; fi;
        sed -i "s/.*#define HAS_CGCODE 1/${ITEMP}#define HAS_CGCODE 1/" Marlin/Configuration.h
        sed -i "s/.*#define HAS_CUSTOM_COLORS 1/${ITEMP}#define HAS_CUSTOM_COLORS 1/" Marlin/Configuration.h
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define HAS_CUSTOM_COLORS 1/${PTEMP}#define HAS_CUSTOM_COLORS 1/" Marlin/Configuration.h
        if [[ $IS && $TP ]]; then
        sed -i "s/.*#define MARLIN_SMALL_BUILD/#define MARLIN_SMALL_BUILD/" Marlin/Configuration_adv.h
        fi;
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${AQUILA_VER}F103RC_voxelab_maple/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLT-EX-A:            # BLT EX for Aquila
    name: Build BLT EX Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [GD32,N32]
        proex: [true,false]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = GD32 ]; then AVTMP="GD32"; else AVTMP="N32"; fi;
        if ($EX); then EXTMP=-ProUI-EX; else EXTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}${MPTMP}_BLT${EXTMP}${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${AQUILA_VER}F103RC_voxelab_maple/" platformio.ini
        if ($EX); then XTEMP=; else XTEMP='\/\/'; fi;
        sed -i "s/.*#define PROUI_EX 1/${XTEMP}#define PROUI_EX 1/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if [[ $IS && $TP && $EX ]]; then
        sed -i "s/.*#define HAS_CGCODE 1/\/\/#define HAS_CGCODE 1/" Marlin/Configuration.h
        fi;
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${AQUILA_VER}F103RC_voxelab_maple/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        EX: ${{ matrix.proex }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-SKR-A:            # UBL EX for Aquila, SKR Mini
    name: Build UBL EX SKR Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [V3_0,V2_0,V3_0_1]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$SKR" = V3_0 ]; then AVTMP="V3"; STMP="STM32G0B1RE"
        elif [ "$SKR" = V2_0 ]; then AVTMP="V2"; STMP="STM32F103RC"
        elif [ "$SKR" = V3_0_1 ]; then AVTMP="V3-0-1"; STMP="STM32F401RC"
        fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Aquila_SKR-Mini-E3-${AVTMP}${MPTMP}_UBL-ProUI-EX$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        if [ "$SKR" = V3_0 ]; then
        cp configurations/BTT_SKR-Mini-E3-V3/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/BTT_SKR-Mini-E3-V3/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/BTT_SKR-Mini-E3-V3/UBL/Version.h Marlin/Version.h
        else
        cp configurations/BTT_SKR-Mini-E3-V2/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/BTT_SKR-Mini-E3-V2/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/BTT_SKR-Mini-E3-V2/UBL/Version.h Marlin/Version.h
        sed -i "s/.*#define HAS_CUSTOM_COLORS 1/\/\/#define HAS_CUSTOM_COLORS 1/" Marlin/Configuration.h
        fi;
        sed -i "s/default_envs =.*/default_envs = ${STMP}_btt/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_BTT_SKR_MINI_E3_${SKR}/" Marlin/Configuration.h
        if [ "$SKR" = V3_0_1 ]; then
        sed -i "s/.*#define CONTROLLER_FAN_PIN.*/#define CONTROLLER_FAN_PIN FAN2_PIN/" Marlin/Configuration_adv.h
        sed -i "s/.*#define E0_AUTO_FAN_PIN.*/#define E0_AUTO_FAN_PIN FAN1_PIN/" Marlin/Configuration_adv.h
        fi;
        if [ "$SKR" = V3_0 ]; then
        sed -i "s/.*#define EDITABLE_HOMING_FEEDRATE.*/#define EDITABLE_HOMING_FEEDRATE/" Marlin/Configuration.h
        fi;
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${STMP}_btt/*.bin temp/build.bin
      env:
        SKR: ${{ matrix.chip }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-SKR-A:            # MM EX for Aquila, SKR Mini
    name: Build MM EX SKR Files A
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [V3_0,V2_0,V3_0_1]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$SKR" = V3_0 ]; then AVTMP="V3"; STMP="STM32G0B1RE"
        elif [ "$SKR" = V2_0 ]; then AVTMP="V2"; STMP="STM32F103RC"
        elif [ "$SKR" = V3_0_1 ]; then AVTMP="V3-0-1"; STMP="STM32F401RC"
        fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_SKR-Mini-E3-${AVTMP}_MM-ProUI-EX$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        if [ "$SKR" = V3_0 ]; then
        cp configurations/BTT_SKR-Mini-E3-V3/MM/Configuration.h Marlin/Configuration.h
        cp configurations/BTT_SKR-Mini-E3-V3/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/BTT_SKR-Mini-E3-V3/MM/Version.h Marlin/Version.h
        else
        cp configurations/BTT_SKR-Mini-E3-V2/MM/Configuration.h Marlin/Configuration.h
        cp configurations/BTT_SKR-Mini-E3-V2/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/BTT_SKR-Mini-E3-V2/MM/Version.h Marlin/Version.h
        fi;
        sed -i "s/default_envs =.*/default_envs = ${STMP}_btt/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_BTT_SKR_MINI_E3_${SKR}/" Marlin/Configuration.h
        if [ "$SKR" = V3_0_1 ]; then
        sed -i "s/.*#define CONTROLLER_FAN_PIN.*/#define CONTROLLER_FAN_PIN FAN2_PIN/" Marlin/Configuration_adv.h
        sed -i "s/.*#define E0_AUTO_FAN_PIN.*/#define E0_AUTO_FAN_PIN FAN1_PIN/" Marlin/Configuration_adv.h
        fi;
        if [ "$SKR" = V3_0 ]; then
        sed -i "s/.*#define EDITABLE_HOMING_FEEDRATE.*/#define EDITABLE_HOMING_FEEDRATE/" Marlin/Configuration.h
        fi;
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/${STMP}_btt/*.bin temp/build.bin
      env:
        SKR: ${{ matrix.chip }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Default-A4:            # Default for Aquila 427
    name: Build Default Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_Default${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ 427/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/Default/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-A4:            # MM EX for Aquila 427
    name: Build MM EX Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ 427/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-A4:            # UBL EX for Aquila 427
    name: Build UBL EX Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
        t13: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}${TTMP}${MPTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLT-EX-A4:            # BLT EX for Aquila 427
    name: Build BLT EX Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        inshape: [true,false]
        temp: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}${MPTMP}_BLT-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ 427/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-IND-A4:            # UBL EX for Aquila X3/S2 427
    name: Build UBL EX IND Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Aquila_${AVTMP}_IND_UBL-ProUI-EX$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_PIN.*/#define Z_MIN_PROBE_PIN PB0/" Marlin/Configuration.h
        sed -i "/.*#define Z_MIN_PROBE_PIN.*/a\#define SERVO0_PIN PB1" Marlin/Configuration.h
        sed -i "s/.*#define FIX_MOUNTED_PROBE.*/#define FIX_MOUNTED_PROBE/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH.*/\/\/#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define NOZZLE_TO_PROBE_OFFSET { -45.*/#define NOZZLE_TO_PROBE_OFFSET { -30.0, 0, 0 }/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; REMP='\/\/'; else TJEMP='\/\/'; REMP=; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/${REMP}#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-LCD-Probe-A4:            # CR10 LCD w/Probe for Aquila 427
    name: Build LCD Probe Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        abl: [UBL,BLT]
        inshape: [true,false]
        temp: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=C2-Aquila_${AVTMP}${MPTMP}_${ABL}${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        if [ "$ABL" = BLT ]; then
        cp configurations/Voxelab\ Aquila\ 427/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/BLT/Version.h Marlin/Version.h
        elif [ "$ABL" = UBL ]; then
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/UBL/Version.h Marlin/Version.h
        sed -i "s/.*#define MESH_EDIT_GFX_OVERLAY/#define MESH_EDIT_GFX_OVERLAY/" Marlin/Configuration.h
        sed -i "s/.*#define UBL_MESH_WIZARD/#define UBL_MESH_WIZARD/" Marlin/Configuration.h
        fi;
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/\/\/#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        sed -i "s/.*#define DWIN_LCD_PROUI/\/\/#define DWIN_LCD_PROUI/" Marlin/Configuration.h
        sed -i "s/.*#define CR10_STOCKDISPLAY/#define CR10_STOCKDISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define LCD_BACKLIGHT_TIMEOUT_MINS.*/\/\/#define LCD_BACKLIGHT_TIMEOUT_MINS/" Marlin/Configuration_adv.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        ABL: ${{ matrix.abl }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-LCD-Default-MM-A4:            # CR10 LCD Default/MM for Aquila 427
    name: Build LCD Default/MM Files A4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        abl: [MM,Default]
        inshape: [true,false]
        temp: [true,false]
    steps:
    - uses: actions/checkout@main
    - name: Setup node
      uses: actions/setup-node@main
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@main
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@main
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$AQUILA_VER" = 427 ]; then AVTMP="427"; DBORD='CREALITY_V427'; else AVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        echo "filename=C2-Aquila_${AVTMP}_${ABL}${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        if [ "$ABL" = Default ]; then
        cp configurations/Voxelab\ Aquila\ 427/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/Default/Version.h Marlin/Version.h
        elif [ "$ABL" = MM ]; then
        cp configurations/Voxelab\ Aquila\ 427/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ 427/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ 427/MM/Version.h Marlin/Version.h
        fi;
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        sed -i "s/.*#define REVERSE_ENCODER_DIRECTION/\/\/#define REVERSE_ENCODER_DIRECTION/" Marlin/Configuration.h
        sed -i "s/.*#define DWIN_LCD_PROUI/\/\/#define DWIN_LCD_PROUI/" Marlin/Configuration.h
        sed -i "s/.*#define CR10_STOCKDISPLAY/#define CR10_STOCKDISPLAY/" Marlin/Configuration.h
        sed -i "s/.*#define LCD_BACKLIGHT_TIMEOUT_MINS.*/\/\/#define LCD_BACKLIGHT_TIMEOUT_MINS/" Marlin/Configuration_adv.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        AQUILA_VER: ${{ matrix.chip }}
        ABL: ${{ matrix.abl }}
        IS: ${{ matrix.inshape }}
        TP: ${{ matrix.temp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@main
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: tanyagray/action-upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
