name: Ender-3V2 Build Configs

######################### Ender-3 #########################

on:
  workflow_dispatch:
#   release:
#     types: [prereleased]

jobs:
  Build-Default-E:            # Default for Ender-3
    name: Build Default Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_GD32_Default${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/Default/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-E:            # MM EX for Ender-3
    name: Build MM EX Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_GD32_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-E:            # UBL EX for Ender-3
    name: Build UBL EX Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        t13: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender${TTMP}${MPTMP}_GD32_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-T5-E:            # UBL EX T5 Speedy for Ender-3
    name: Build UBL EX T5 Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender_SPDY5${MPTMP}_GD32_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 5/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-S1-UBL-EX-E:            # UBL EX for Ender-3S1
    name: Build S1 UBL EX Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [F4,F1]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = F4 ]; then EVTMP="-F4"; DENV="STM32F401RC_creality"; DBORD='CREALITY_V24S1_301F4'; else EVTMP="-F1"; DENV="STM32F103RC_creality"; DBORD='CREALITY_V24S1_301'; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender-S1${EVTMP}${MPTMP}_UBL-ProUI-EX$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/S1/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/S1/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/S1/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = ${DENV}/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        sed -i "s/.*#define HAS_ESDIAG 1/${MPDEMP}#define HAS_ESDIAG 1/" Marlin/Configuration.h
        sed -i "s/.*#define PROUI_ITEM_PLOT/${MPDEMP}#define PROUI_ITEM_PLOT/" Marlin/Configuration.h
        sed -i "s/.*#define PROUI_ITEM_TRAM/${MPDEMP}#define PROUI_ITEM_TRAM/" Marlin/Configuration.h
        sed -i "s/.*#define FWRETRACT/${MPDEMP}#define FWRETRACT/" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv .pio/build/${DENV}/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLT-EX-E:            # BLT EX for Ender-3
    name: Build BLT EX Files E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender${MPTMP}_GD32_BLT-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = GD32F303RE_creality_maple/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/GD32F303RE_creality_maple/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-Default-E4:            # Default for Ender-3
    name: Build Default Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; DBORD='CREALITY_V427'; else EVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_Default${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/Default/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-E4:            # MM EX for Ender-3
    name: Build MM EX Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; DBORD='CREALITY_V427'; else EVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-E4:            # UBL EX for Ender-3
    name: Build UBL EX Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        t13: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; DBORD='CREALITY_V427'; else EVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender${TTMP}${MPTMP}_${EVTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-T5-E4:            # UBL EX T5 Speedy for Ender-3
    name: Build UBL EX T5 Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; DBORD='CREALITY_V427'; else EVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender_SPDY5${MPTMP}_${EVTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 5/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLT-EX-E4:            # BLT EX for Ender-3
    name: Build BLT EX Files E4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [427,422]
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if [ "$ENDER_VER" = 427 ]; then EVTMP="427"; DBORD='CREALITY_V427'; else EVTMP="422"; DBORD='CREALITY_V422'; fi;
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender_${EVTMP}_BLT-ProUI-EX${ISTMP}${TPTMP}${MPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/BLT/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/BLT/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/BLT/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RE_creality/" platformio.ini
        sed -i "s/.*#define MOTHERBOARD BOARD_.*/#define MOTHERBOARD BOARD_${DBORD}/" Marlin/Configuration.h
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F103RE_creality/*.bin temp/build.bin
      env:
        ENDER_VER: ${{ matrix.chip }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-E3-FREE-RUNS:            # UBL EX for Ender-3 E3 Free-runs
    name: Build UBL EX E3 Free-runs Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        t13: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($T13); then TTMP=_SPRT13; else TTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender_E3-Free-runs${TTMP}${MPTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F401RE_freeruns/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        if ($T13); then THMP="13"; DSMP="424.9"; else THMP="1"; DSMP="98"; fi;
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 ${THMP}/" Marlin/Configuration.h
        sed -i "s/.*#define DEFAULT_AXIS_STEPS_PER_UNIT.*/#define DEFAULT_AXIS_STEPS_PER_UNIT { 80,80,400,${DSMP} }/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F401RE_freeruns/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        T13: ${{ matrix.t13 }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-EX-T5-E3-FREE-RUNS:            # UBL EX T5 Speedy for Ender-3 E3 Free-runs
    name: Build UBL EX T5 E3 Free-runs Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=${DTMP}Ender_E3-Free-runs_SPDY5${MPTMP}_UBL-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/E3-Free-runs/UBL/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F401RE_freeruns/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        sed -i "s/^#define TEMP_SENSOR_0.*/#define TEMP_SENSOR_0 5/" Marlin/Configuration.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F401RE_freeruns/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX-E3-FREE-RUNS:            # MM EX for Ender-3 E3 Free-runs
    name: Build MM EX E3 Free-runs Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
        tjc: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 20
    - name: Cache pip
      uses: actions/cache@v4.1.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.1.2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($TJC); then DTMP=TJC-; else DTMP=; fi;
        echo "filename=${DTMP}Ender_E3-Free-runs_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Creality\ Ender/E3-Free-runs/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Creality\ Ender/E3-Free-runs/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Creality\ Ender/E3-Free-runs/MM/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = STM32F401RE_freeruns/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if ($TJC); then TJEMP=; else TJEMP='\/\/'; fi;
        sed -i "s/.*#define TJC_DISPLAY/${TJEMP}#define TJC_DISPLAY/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/STM32F401RE_freeruns/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
        TJC: ${{ matrix.tjc }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: classicrocker883/upload-a-release-asset@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
