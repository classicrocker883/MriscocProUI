name: HC32 Build Configs

######################### Aquila HC32 #########################

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        echo "filename=HC32_Default${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationDNP.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advDNP.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-MM-EX:
    name: Build MM EX Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        echo "filename=HC32_MM-ProUI-EX${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationMM.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advMM.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define USE_GRID_MESHVIEWER/${PTEMP}#define USE_GRID_MESHVIEWER/" Marlin/Configuration.h
        sed -i "s/.*#define HAS_CUSTOM_COLORS/${PTEMP}#define HAS_CUSTOM_COLORS/" Marlin/Configuration.h
        sed -i "s/.*#define HAS_LOCKSCREEN/${PTEMP}#define HAS_LOCKSCREEN/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define CAPABILITIES_REPORT/${PTEMP}#define CAPABILITIES_REPORT/" Marlin/Configuration_adv.h
        sed -i "s/.*#define HAS_LOCKSCREEN/${PTEMP}#define HAS_LOCKSCREEN/" Marlin/Configuration.h
        if [[ $IS == true && $TP == true ]]; then
        sed -i "s/.*#define FILAMENT_RUNOUT_SENSOR/\/\/#define FILAMENT_RUNOUT_SENSOR/" Marlin/Configuration.h
        fi;
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-PROUI-EX:
    name: Build UBL ProUI/ProUI-EX Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        temp: [true,false]
        pro: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($PRO); then PRTMP=; else PRTMP=-ProUI-EX; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=HC32${MPTMP}_UBL${PRTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationUBL.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advUBL.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        if ($PRO); then
        sed -i "s/.*#define PROUI_EX 1/\/\/#define PROUI_EX 1/" Marlin/Configuration.h
        fi;
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        if [[ $PRO == false && $TP == true ]]; then
        sed -i "s/.*#define PRINTCOUNTER/\/\/#define PRINTCOUNTER/" Marlin/Configuration.h
        sed -i "s/.*#define EEPROM_CHITCHAT/\/\/#define EEPROM_CHITCHAT/" Marlin/Configuration.h
        sed -i "s/.*#define USE_GRID_MESHVIEWER 1/\/\/#define USE_GRID_MESHVIEWER 1/" Marlin/Configuration.h
        fi;
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        if ($BMP); then sed -i -e "/.*#define BIQU_MICROPROBE_V2.*/a#define NO_MICROPROBE_WARNING" Marlin/Configuration.h; fi;
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        TP: ${{ matrix.temp }}
        PRO: ${{ matrix.pro }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-UBL-IS:
    name: Build UBL IS Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        inshape: [true]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($IS); then ISTMP=-IS; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=HC32${MPTMP}_UBL${ISTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationUBL.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advUBL.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($IS); then STEMP=; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        if ($BMP); then sed -i -e "/.*#define BIQU_MICROPROBE_V2.*/a#define NO_MICROPROBE_WARNING" Marlin/Configuration.h; fi;
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        IS: ${{ matrix.inshape }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-BLT-EX:
    name: Build BLT EX Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        inshape: [true,false]
        bmp: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        if ($BMP); then MPTMP=_BMP; else MPTMP=; fi;
        echo "filename=HC32${MPTMP}_BLT-ProUI-EX${ISTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        cp configurations/Voxelab\ Aquila\ HC32/ConfigurationBLT.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/Configuration_advBLT.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/Version.h Marlin/Version.h
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($BMP); then MPDEMP=; MPEMP='\/\/'; MPHS="LOW"; else MPDEMP='\/\/'; MPEMP=; MPHS="HIGH"; fi;
        sed -i "s/.*#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/${MPDEMP}#define Z_MIN_PROBE_USES_Z_MIN_ENDSTOP_PIN/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_ENDSTOP_HIT_STATE.*/#define Z_MIN_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define Z_MIN_PROBE_ENDSTOP_HIT_STATE.*/#define Z_MIN_PROBE_ENDSTOP_HIT_STATE ${MPHS}/" Marlin/Configuration.h
        sed -i "s/.*#define BLTOUCH/${MPEMP}#define BLTOUCH/" Marlin/Configuration.h
        sed -i "s/.*#define BIQU_MICROPROBE_V2/${MPDEMP}#define BIQU_MICROPROBE_V2/" Marlin/Configuration.h
        sed -i "s/.*#define PROBE_ENABLE_DISABLE/${MPDEMP}#define PROBE_ENABLE_DISABLE/" Marlin/Configuration.h
        if ($BMP); then sed -i -e "/.*#define BIQU_MICROPROBE_V2.*/a#define NO_MICROPROBE_WARNING" Marlin/Configuration.h; fi;
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        IS: ${{ matrix.inshape }}
        BMP: ${{ matrix.bmp }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-C2-Default-MM:            # CR10 LCD C2 Default/MM
    name: Build C2 Default/MM Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abl: [MM,Default]
        temp: [true,false]
        inshape: [true,false]
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup node
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 16
    - name: Cache pip
      uses: actions/cache@v4.2.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4.2.0
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.11'
    - name: Install PlatformIO
      run: |
        python3 -m pip install --upgrade pip wheel platformio
    - name: Run PlatformIO
      id: build_configs
      run: |
        if ($TP); then TPTMP=-MPC; else TPTMP=; fi;
        if ($IS); then ISTMP=-IS; else ISTMP=; fi;
        > Marlin/Configuration.h
        > Marlin/Configuration_adv.h
        > Marlin/Version.h
        if [ "$ABL" = Default ]; then
        cp configurations/Voxelab\ Aquila\ HC32/C2/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/C2/Default/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/C2/Default/Version.h Marlin/Version.h
        elif [ "$ABL" = MM ]; then
        cp configurations/Voxelab\ Aquila\ HC32/C2/MM/Configuration.h Marlin/Configuration.h
        cp configurations/Voxelab\ Aquila\ HC32/C2/MM/Configuration_adv.h Marlin/Configuration_adv.h
        cp configurations/Voxelab\ Aquila\ HC32/C2/MM/Version.h Marlin/Version.h
        fi;
        echo "filename=C2-HC32_${ABL}${ISTMP}${TPTMP}$(date +"-%m-%d").bin" >> $GITHUB_OUTPUT
        sed -i "s/default_envs =.*/default_envs = HC32F460C_aquila_101/" platformio.ini
        if ($IS); then STEMP=; else STEMP='\/\/'; fi;
        sed -i "s/.*#define INPUT_SHAPING_X/${STEMP}#define INPUT_SHAPING_X/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Y/${STEMP}#define INPUT_SHAPING_Y/" Marlin/Configuration_adv.h
        sed -i "s/.*#define INPUT_SHAPING_Z/${STEMP}#define INPUT_SHAPING_Z/" Marlin/Configuration_adv.h
        if ($TP); then PTEMP='\/\/'; MTEMP=; else PTEMP=; MTEMP='\/\/'; fi;
        sed -i "0,/^#define PIDTEMP/ s/.*#define PIDTEMP/${PTEMP}#define PIDTEMP/" Marlin/Configuration.h
        sed -i "s/.*#define MPCTEMP/${MTEMP}#define MPCTEMP/" Marlin/Configuration.h
        pio run
        mkdir temp
        mv .pio/build/HC32F460C_aquila_101/*.bin temp/build.bin
      env:
        ABL: ${{ matrix.abl }}
        TP: ${{ matrix.temp }}
        IS: ${{ matrix.inshape }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload A Release Asset
      uses: classicrocker883/upload-a-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
